"use strict";(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[254],{3254:(n,x,o)=>{o.r(x),o.d(x,{EditionReportModule:()=>D});var s=o(655),e=o(5e3),v=o(8749),y=o(7937),I=o(3646);let r=class{constructor(){this.navigateToReportFragmentRequest=new e.vpe,this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe}navigateToReportFragment(t){this.navigateToReportFragmentRequest.emit(t)}openModal(t){this.openModalRequest.emit(t)}selectSvgSheet(t){this.selectSvgSheetRequest.emit(t)}};r.propDecorators={sourceListData:[{type:e.IIB}],sourceDescriptionListData:[{type:e.IIB}],sourceEvaluationListData:[{type:e.IIB}],navigateToReportFragmentRequest:[{type:e.r_U}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},r=(0,s.gn)([(0,e.wA2)({selector:"awg-sources",template:y,changeDetection:e.n4l.OnPush,styles:[I]})],r);var b=o(7275),L=o(7082),M=o(4678);let c=class{constructor(){this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.FIRM_SIGNS={OP12:{A:[M.w8.FIRM_JE_NO_9_LIN_28]},OP25:{A:[M.w8.FIRM_JE_NO_15_LIN_16]}},this.ref=this}openModal(t){!t||this.openModalRequest.emit(t)}selectSvgSheet(t){!t||this.selectSvgSheetRequest.emit(t)}};c.ctorParameters=()=>[],c.propDecorators={sourceDescriptionListData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},c=(0,s.gn)([(0,e.wA2)({selector:"awg-source-description",template:b,changeDetection:e.n4l.OnPush,styles:[L]})],c);var E=o(8637),w=o(2698);let l=class{constructor(){this.navigateToReportFragmentRequest=new e.vpe,this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.ref=this}navigateToReportFragment(t){this.navigateToReportFragmentRequest.emit(t)}openModal(t){this.openModalRequest.emit(t)}selectSvgSheet(t){this.selectSvgSheetRequest.emit(t)}};l.ctorParameters=()=>[],l.propDecorators={sourceEvaluationListData:[{type:e.IIB}],navigateToReportFragmentRequest:[{type:e.r_U}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},l=(0,s.gn)([(0,e.wA2)({selector:"awg-source-evaluation",template:E,changeDetection:e.n4l.OnPush,styles:[w]})],l);var q=o(4826),P=o(3079);let p=class{constructor(){this.openModalRequest=new e.vpe,this.ref=this}openModal(t){!t||this.openModalRequest.emit(t)}};p.ctorParameters=()=>[],p.propDecorators={sourceListData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}]},p=(0,s.gn)([(0,e.wA2)({selector:"awg-source-list",template:q,changeDetection:e.n4l.OnPush,styles:[P]})],p);let m=class{};m=(0,s.gn)([(0,e.LVF)({imports:[v.m],declarations:[r,c,l,p],exports:[r]})],m);var C=o(9875),F=o(7958),T=o(5384);let a=class{constructor(){this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe,this.ref=this}openModal(t){this.openModalRequest.emit(t)}selectSvgSheet(t){this.selectSvgSheetRequest.emit(t)}isNotEmptyArray(t){return t&&t.constructor===Array&&t.length>0}};a.ctorParameters=()=>[],a.propDecorators={textcriticsData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},a=(0,s.gn)([(0,e.wA2)({selector:"awg-critics-list",template:F,styles:[T]})],a);var A=o(7e3),$=o(2938);let u=class{constructor(){this.openModalRequest=new e.vpe,this.selectSvgSheetRequest=new e.vpe}openModal(t){this.openModalRequest.emit(t)}selectSvgSheet(t){this.selectSvgSheetRequest.emit(t)}};u.propDecorators={textcriticsData:[{type:e.IIB}],openModalRequest:[{type:e.r_U}],selectSvgSheetRequest:[{type:e.r_U}]},u=(0,s.gn)([(0,e.wA2)({selector:"awg-textcritics",template:A,changeDetection:e.n4l.OnPush,styles:[$]})],u);let h=class{};h=(0,s.gn)([(0,e.LVF)({imports:[v.m,C.K],declarations:[a,u],exports:[a,u]})],h);var R=o(98),O=o(2792),U=o(650),N=o(1737),f=o(6900),B=o(7545),W=o(7221);let g=class{constructor(t,d,k){this.editionDataService=t,this.editionService=d,this.router=k,this.errorObject=null}ngOnInit(){this.getEditionReportData()}getEditionReportData(){this.editionReportData$=this.editionService.getEditionWork().pipe((0,B.w)(t=>(this.editionWork=t,this.editionDataService.getEditionReportData(this.editionWork))),(0,W.K)(t=>(this.errorObject=t,(0,N._)(t))))}onReportFragmentNavigate(t){t||(t="");const d={fragment:t};this.router.navigate([this.editionWork.baseRoute,this.editionWork.reportRoute.route],d)}onSvgSheetSelect(t){t||(t="");const d={queryParams:{sketch:t},queryParamsHandling:""};this.router.navigate([this.editionWork.baseRoute,this.editionWork.detailRoute.route],d)}};g.ctorParameters=()=>[{type:f.K},{type:f.O},{type:R.F0}],g=(0,s.gn)([(0,e.wA2)({selector:"awg-edition-report",template:O,changeDetection:e.n4l.OnPush,styles:[U]})],g);const H=[{path:"",component:g,data:{title:"AWG Online Edition \u2013 Report"}}],K=[g];let S=class{};S=(0,s.gn)([(0,e.LVF)({imports:[R.Bz.forChild(H)],exports:[R.Bz]})],S);let D=class{};D=(0,s.gn)([(0,e.LVF)({imports:[v.m,m,h,S],declarations:[K]})],D)},650:n=>{n.exports=""},7082:n=>{n.exports=""},2698:n=>{n.exports=""},3079:n=>{n.exports=""},3646:n=>{n.exports=""},5384:n=>{n.exports=""},2938:n=>{n.exports=""},2792:n=>{n.exports='\x3c!-- content: edition report --\x3e\n<div>\n    \x3c!-- modal --\x3e\n    <awg-modal #modal></awg-modal>\n\n    \x3c!-- sources --\x3e\n    <awg-sources\n        *ngIf="editionReportData$ | async as editionReportData"\n        [sourceListData]="editionReportData[0]"\n        [sourceDescriptionListData]="editionReportData[1]"\n        [sourceEvaluationListData]="editionReportData[2]"\n        (navigateToReportFragmentRequest)="onReportFragmentNavigate($event)"\n        (openModalRequest)="modal.open($event)"\n        (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n    </awg-sources>\n\n    \x3c!-- textcritics --\x3e\n    <awg-textcritics\n        *ngIf="editionReportData$ | async as editionReportData"\n        [textcriticsData]="editionReportData[3]"\n        (openModalRequest)="modal.open($event)"\n        (selectSvgSheetRequest)="onSvgSheetSelect($event)">\n    </awg-textcritics>\n</div>\n'},7275:n=>{n.exports='<div class="awg-source-description-list" *ngIf="sourceDescriptionListData">\n    <div\n        class="awg-source-description para"\n        *ngFor="let sourceDescription of sourceDescriptionListData.sources"\n        [id]="sourceDescription.id">\n        <p *ngIf="sourceDescription.siglum" class="bold">{{ sourceDescription.siglum }}</p>\n        <p *ngIf="sourceDescription.location">{{ sourceDescription.location }}</p>\n        <div *ngIf="sourceDescription.description">\n            <p\n                *ngFor="let description of sourceDescription.description"\n                [compile-html]="description"\n                [compile-html-ref]="this"></p>\n        </div>\n    </div>\n</div>\n'},8637:n=>{n.exports='<div class="para" *ngIf="sourceEvaluationListData">\n    <p\n        *ngFor="let evaluation of sourceEvaluationListData.sources[0].content"\n        [compile-html]="evaluation"\n        [compile-html-ref]="this"></p>\n</div>\n'},4826:n=>{n.exports='<table aria-label="Table for list of sources" class="table table-hover borderless">\n    <tbody>\n        \x3c!--  at the moment only for the first item ("source.siglum == \'A\'") --\x3e\n        <tr *ngFor="let source of sourceListData.sources; let sourceIndex = index">\n            <th scope="row">\n                <ng-container *ngIf="sourceIndex === 0; else modalHint">\n                    <a [routerLink]="[\'./\']" fragment="{{ source.linkTo }}" [innerHTML]="source.siglum"></a>\n                </ng-container>\n                <ng-template #modalHint>\n                    <a (click)="openModal(source.linkTo)" [innerHTML]="source.siglum"></a>\n                </ng-template>\n            </th>\n            <td>\n                <span [compile-html]="source.type" [compile-html-ref]="ref"></span> <br />\n                <span [innerHTML]="source.location"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>\n'},7937:n=>{n.exports='<ngb-accordion id="sourcesAcc" activeIds="sourcesPanel">\n    <ngb-panel id="sourcesPanel" title="I. Quellen">\n        <ng-template ngbPanelContent>\n            <ngb-accordion id="sourcesPanelAcc" activeIds="sourceList, sourceDesc, sourceEvaluation">\n                \x3c!-- source list --\x3e\n                <ngb-panel id="sourceList" title="1. Quellen\xfcbersicht">\n                    <ng-template ngbPanelContent>\n                        <awg-source-list\n                            *ngIf="sourceListData"\n                            [sourceListData]="sourceListData"\n                            (openModalRequest)="openModal($event)">\n                        </awg-source-list>\n                    </ng-template>\n                </ngb-panel>\n\n                \x3c!-- source description --\x3e\n                <ngb-panel id="sourceDesc" title="2. Quellenbeschreibung">\n                    <ng-template ngbPanelContent>\n                        <awg-source-description\n                            *ngIf="sourceDescriptionListData"\n                            [sourceDescriptionListData]="sourceDescriptionListData"\n                            (openModalRequest)="openModal($event)"\n                            (selectSvgSheetRequest)="selectSvgSheet($event)">\n                        </awg-source-description>\n                    </ng-template>\n                </ngb-panel>\n\n                \x3c!-- source evaluation --\x3e\n                <ngb-panel id="sourceEvaluation" title="3. Quellenbewertung">\n                    <ng-template ngbPanelContent>\n                        <awg-source-evaluation\n                            *ngIf="sourceEvaluationListData"\n                            [sourceEvaluationListData]="sourceEvaluationListData"\n                            (navigateToReportFragmentRequest)="navigateToReportFragment($event)"\n                            (openModalRequest)="openModal($event)"\n                            (selectSvgSheetRequest)="selectSvgSheet($event)">\n                        </awg-source-evaluation>\n                    </ng-template>\n                </ngb-panel>\n            </ngb-accordion>\n            \x3c!-- END inner accordion --\x3e\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n\x3c!-- END outer accordion --\x3e\n'},7958:n=>{n.exports='<ngb-accordion #sketchAcc="ngbAccordion" id="sketchAcc" *ngIf="textcriticsData">\n    <ngb-panel *ngFor="let textcritic of textcriticsData.textcritics" [id]="textcritic.id">\n        <ng-template ngbPanelHeader>\n            <div class="d-flex align-items-center justify-content-between">\n                <button ngbPanelToggle class="btn btn-link text-left">{{ textcritic.label }}</button>\n                <button\n                    type="button"\n                    class="btn btn-sm btn-outline-info ml-2"\n                    (click)="selectSvgSheet(textcritic.label)">\n                    Zur Transkription\n                </button>\n            </div>\n        </ng-template>\n        <ng-template ngbPanelContent>\n            <div *ngIf="isNotEmptyArray(textcritic.description)">\n                <p class="caps">Skizzenkommentar:</p>\n                <p\n                    *ngFor="let description of textcritic.description"\n                    [compile-html]="description"\n                    [compile-html-ref]="ref"></p>\n            </div>\n            <div *ngIf="isNotEmptyArray(textcritic.comments)">\n                <p class="caps">Textkritischer Kommentar:</p>\n                <awg-edition-tka-table\n                    [textcriticalComments]="textcritic.comments"\n                    (openModalRequest)="openModal($event)"\n                    (selectSvgSheetRequest)="selectSvgSheet($event)">\n                </awg-edition-tka-table>\n            </div>\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n'},7e3:n=>{n.exports='<ngb-accordion id="tkaAcc" activeIds="tkaPanel">\n    <ngb-panel id="tkaPanel" title="II. Textkritischer Kommentar">\n        <ng-template ngbPanelContent>\n            <awg-critics-list\n                *ngIf="textcriticsData"\n                [textcriticsData]="textcriticsData"\n                (openModalRequest)="openModal($event)"\n                (selectSvgSheetRequest)="selectSvgSheet($event)"></awg-critics-list>\n        </ng-template>\n    </ngb-panel>\n</ngb-accordion>\n'}}]);