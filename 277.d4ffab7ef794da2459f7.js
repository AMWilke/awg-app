(self.webpackChunkawg_app=self.webpackChunkawg_app||[]).push([[277],{2277:(e,t,n)=>{"use strict";n.r(t),n.d(t,{DataViewModule:()=>Q});var s=n(4762),r=n(7716),a=n(1470);let o=class{constructor(){this.resourceRequest=new r.vpe}ngOnInit(){}navigateToResource(e){e&&(e=e.toString(),this.resourceRequest.emit(e))}};o.propDecorators={header:[{type:r.IIB}],resourceUrl:[{type:r.IIB}],resourceRequest:[{type:r.r_U}]},o=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-header",template:'\x3c!-- resource detail header --\x3e\n<div class="resource-header">\n    <div class="row">\n        <div class="col-lg-8">\n            <h2 class="resource-title">\n                <div class="title">\n                    <span [compile-html]="header?.title" [compile-html-ref]="this"></span>\n                </div>\n                <div class="subtitle">\n                    <small></small>\n                </div>\n            </h2>\n            <div class="resource-link">\n                <small>\n                    API-Request:\n                    <a href="{{ resourceUrl }}">{{ resourceUrl }}</a>\n                    \x3c!-- TODO: (resource-detail-html-header): change then to stable URL for resource --\x3e\n                </small>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <table class="table table-sm resource-header-table">\n                <tbody>\n                    <tr>\n                        <th>ID:</th>\n                        <td id="header?.objID">{{ header?.objID }}</td>\n                    </tr>\n                    <tr>\n                        <th>Kategorie</th>\n                        <td>\n                            <span class="resource-type">{{ header?.type }}</span\n                            >&nbsp;<span class="resource-icon"><img [src]="header?.icon" alt="icon" /></span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>Zuletzt bearbeitet:</th>\n                        <td>\n                            <span class="resource-lastmod">{{ header?.lastmod }}</span> (UTC)\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n',changeDetection:r.n4l.OnPush,styles:["/************************************************\n *\n *               CREDITS\n *\n * This code is inspired, adapted or taken from:\n *\n * ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n * https://arachne.dainst.org/entity/1121229**]\n * 20.11.2017\n *\n *\n *\n************************************************/\n\n/* resource header */\n\n.resource-header {\n    margin: 1rem 0 0 0;\n    border-bottom: 1px solid #ddd;\n}\n\n/* resource header title */\n\n.resource-title .title {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.resource-title .title:hover {\n    white-space: normal;\n    width: inherit;\n    height: auto;\n}\n\n/* resource header link */\n\n.resource-link {\n    margin: 2rem 0;\n}\n\n/* resource header table */\n\n/* remove top border from table */\n\n.resource-header table.resource-header-table tr:first-of-type th,\n.resource-header table.resource-header-table tr:first-of-type td {\n    border-top: none;\n}\n"]})],o);let i=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe}ngOnInit(){}exposeGnd(e){e&&this.gndRequest.emit(e)}navigateToResource(e){e&&(e=e.toString(),this.resourceRequest.emit(e))}};i.propDecorators={resourceDetailData:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},i=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-html",template:'\x3c!-- resourceDetailData content --\x3e\n<awg-resource-detail-html-content\n    *ngIf="resourceDetailData?.content"\n    [content]="resourceDetailData?.content"\n    (gndRequest)="exposeGnd($event)"\n    (resourceRequest)="navigateToResource($event)"\n>\n</awg-resource-detail-html-content>\n',changeDetection:r.n4l.OnPush,styles:[""]})],i);let c=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe}ngOnInit(){}exposeGnd(e){e&&this.gndRequest.emit(e)}navigateToResource(e){e&&(e=e.toString(),this.resourceRequest.emit(e))}};c.propDecorators={content:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},c=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content --\x3e\n<div class="awg-resource-content">\n    <div class="row">\n        \x3c!-- object properties --\x3e\n        <div class="col-lg-8">\n            <awg-resource-detail-html-content-props\n                [props]="content?.props"\n                (gndRequest)="exposeGnd($event)"\n                (resourceRequest)="navigateToResource($event)"\n            >\n            </awg-resource-detail-html-content-props>\n        </div>\n\n        \x3c!-- right side nav objects --\x3e\n        <div class="col-lg-4 mt-3 mt-lg-0 mb-3">\n            <div class="sidenav-right">\n                \x3c!-- image objects --\x3e\n                <awg-resource-detail-html-content-imageobjects [images]="content?.images">\n                </awg-resource-detail-html-content-imageobjects>\n\n                \x3c!-- connected objects --\x3e\n                <awg-resource-detail-html-content-linkedobjects\n                    [incomingGroups]="content?.incoming"\n                    (resourceRequest)="navigateToResource($event)"\n                >\n                </awg-resource-detail-html-content-linkedobjects>\n            </div>\n        </div>\n    </div>\n</div>\n',changeDetection:r.n4l.OnPush,styles:[""]})],c);var l=n(7191);let h=class{constructor(){this.galleryOptions=[new l.WB({width:"100%",imageSize:"contain",thumbnailSize:"contain",thumbnailMargin:5,thumbnailsMargin:0,previewCloseOnClick:!0,previewCloseOnEsc:!0,previewZoom:!0,previewRotate:!0,linkTarget:"_blank"})]}ngOnInit(){}};h.propDecorators={images:[{type:r.IIB}]},h=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-imageobjects",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content: image objects --\x3e\n<div class="awg-image-obj mb-3" *ngIf="images?.length > 0">\n    \x3c!-- header --\x3e\n    <h5>\n        Abbildungen (<span id="awg-image-number">{{ images?.length }}</span\n        >)\n    </h5>\n\n    \x3c!-- image slider --\x3e\n    <div class="card awg-image-slider">\n        <ngx-gallery class="ngx-gallery" [options]="galleryOptions" [images]="images"></ngx-gallery>\n    </div>\n    \x3c!-- end DIV image-slider --\x3e\n</div>\n\x3c!-- end DIV image-obj --\x3e\n',changeDetection:r.n4l.OnPush,styles:["/* slider container */\n.awg-image-slider {\n    height: 300px;\n}\n.awg-image-slider .ngx-gallery {\n    display: inline-block;\n}\n/* image preview */\nngx-gallery ::ng-deep .ngx-gallery-image-wrapper {\n    background-color: #e7e7e7;\n}\n/* arrows */\nngx-gallery ::ng-deep .ngx-gallery-arrow {\n    color: #676767;\n}\nngx-gallery ::ng-deep .ngx-gallery-arrow.ngx-gallery-disabled {\n    opacity: 0.3;\n}\n/* thumbnails */\nngx-gallery ::ng-deep .ngx-gallery-thumbnail {\n    opacity: 0.3;\n}\nngx-gallery ::ng-deep .ngx-gallery-thumbnail.ngx-gallery-active,\nngx-gallery ::ng-deep .ngx-gallery-thumbnail:hover {\n    opacity: 1;\n}\n"]})],h);let u=class{constructor(){this.resourceRequest=new r.vpe}get totalNumber(){return this._getNestedArraysTotalItems(this.incomingGroups)||0}navigateToResource(e){e&&(e=e.toString(),this.resourceRequest.emit(e))}_getNestedArraysTotalItems(e){if(!e)return;return e.map(e=>e.links.length).reduce((e,t)=>e+t,0)}};u.propDecorators={incomingGroups:[{type:r.IIB}],resourceRequest:[{type:r.r_U}]},u=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-linkedobjects",template:'\x3c!--\n/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/ --\x3e\n\x3c!-- resourceDetailData content: linked objects --\x3e\n<div class="awg-linked-obj">\n    <h5>\n        \x3c!-- TODO: link to linked objects overview\n        <a (click)="navigateToSearchResults()">\n        --\x3e\n        Verkn\xfcpfte Objekte (<span id="awg-incoming-size" *ngIf="incomingGroups">{{ totalNumber }}</span\n        >)\n        \x3c!--\n        </a>\n        --\x3e\n    </h5>\n\n    <ngb-accordion [closeOthers]="true">\n        <ngb-panel\n            id="incoming-linkgroup-{{ i }}"\n            class="awg-linked-obj-incoming-linkgroup"\n            *ngFor="let restypeGroup of incomingGroups; let i = index"\n        >\n            <ng-template ngbPanelTitle>\n                <span class="awg-linked-obj-title-group">\n                    <span class="badge badge-info mr-2">{{ restypeGroup?.links?.length }}</span>\n                    <span class="awg-linked-obj-title single-line">{{ restypeGroup?.restypeLabel }}</span>\n                </span>\n            </ng-template>\n            <ng-template ngbPanelContent>\n                <table class="table table-sm table-hover borderless awg-linked-obj-table mb-0">\n                    <tbody>\n                        <tr *ngFor="let link of restypeGroup.links">\n                            <td>\n                                <a class="awg-linked-obj-link" (click)="navigateToResource(link?.id)">\n                                    <img [src]="link?.restype?.icon" alt="icon" />\n                                    &nbsp;[<span class="awg-linked-obj-link-id">{{ link?.id }}</span\n                                    >]&nbsp;\n                                    <span class="awg-linked-obj-link-value">{{ link?.value }}</span>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </ng-template>\n        </ngb-panel>\n    </ngb-accordion>\n</div>\n\x3c!-- end DIV linkedObj --\x3e\n',changeDetection:r.n4l.OnPush,styles:["/************************************************\n *\n *               CREDITS\n *\n * This code is inspired, adapted or taken from:\n *\n * ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n * https://arachne.dainst.org/entity/1121229**]\n * 20.11.2017\n *\n *\n *\n ************************************************/\n\n/* image objects */\n\n.awg-linked-obj-link {\n    cursor: pointer;\n}\n\n.awg-linked-obj-link {\n    color: #333 !important;\n}\n\n.awg-linked-obj-link:hover {\n    border-bottom: none !important;\n}\n\n.awg-linked-obj-table td {\n    max-width: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n"]})],u);var g=n(7850);let d=class{constructor(){this.gndRequest=new r.vpe,this.resourceRequest=new r.vpe,this.metaBreakLine="Versionsdatum"}ngOnChanges(e){this._checkForGND(e.props)}navigateToResource(e){e&&(e=e.toString(),this.resourceRequest.emit(e))}ngOnDestroy(){this._removeGnd()}_checkForGND(e){const t=e.currentValue.filter(e=>"856"===e.pid&&e.values&&e.values.length>0);t.length>0?t.map(e=>{e.values.map(e=>{const t=new g.zI(g.G0.SET,e);this._exposeGnd(t)})}):this._removeGnd()}_exposeGnd(e){e&&this.gndRequest.emit(e)}_removeGnd(){const e=new g.zI(g.G0.REMOVE,null);this._exposeGnd(e)}};d.propDecorators={props:[{type:r.IIB}],gndRequest:[{type:r.r_U}],resourceRequest:[{type:r.r_U}]},d=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-html-content-props",template:'\x3c!-- resource detail data content: props --\x3e\n<section class="awg-props">\n    <h4 class="awg-props-title ml-0">Objektdaten</h4>\n    <ul *ngFor="let prop of props">\n        <li id="breakLine" *ngIf="prop?.label === metaBreakLine">\n            <hr />\n        </li>\n        <li class="awg-prop" *ngIf="(prop?.values)[0]">\n            \x3c!-- value label --\x3e\n            <strong class="awg-prop-label" *ngIf="prop?.label">\n                {{ prop?.label }}\n            </strong>\n            \x3c!-- value content --\x3e\n            <ul *ngFor="let value of prop?.values">\n                <li class="awg-prop-value" *ngIf="value">\n                    <span [compile-html]="value" [compile-html-ref]="this"></span>\n                </li>\n            </ul>\n        </li>\n    </ul>\n</section>\n',changeDetection:r.n4l.OnPush,styles:["/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/\n\n/* props */\n\n.awg-props ul {\n    padding-left: 0;\n    margin-top: 0.5rem;\n    margin-bottom: 0.25rem;\n}\n\n.awg-props li {\n    list-style: none;\n    padding: 0.25rem 0;\n}\n\n.awg-props .awg-prop .awg-prop-label {\n    margin-top: 8px;\n    margin-bottom: -4px;\n    display: block;\n    font-size: 21px;\n    font-weight: 400;\n}\n\n.awg-props .awg-prop .awg-prop-value {\n    padding: 3px 0;\n    margin-left: 1rem;\n}\n"]})],d);let p=class{ngOnInit(){}};p.propDecorators={resourceJsonConvertedData:[{type:r.IIB}]},p=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-json-converted",template:'<awg-json-viewer\n    jsonViewerHeader="Converted JSON response from Salsah-API"\n    [jsonViewerData]="resourceJsonConvertedData"\n>\n</awg-json-viewer>\n',changeDetection:r.n4l.OnPush,styles:[""]})],p);let m=class{ngOnInit(){}};m.propDecorators={resourceJsonRawData:[{type:r.IIB}]},m=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail-json-raw",template:'<awg-json-viewer jsonViewerHeader="Raw JSON response from Salsah-API" [jsonViewerData]="resourceJsonRawData">\n</awg-json-viewer>\n',changeDetection:r.n4l.OnPush,styles:[""]})],m);let b=class{};b=(0,s.gn)([(0,r.LVF)({imports:[a.m],declarations:[o,i,c,h,u,d,p,m],exports:[o,i,c,h,u,d,p,m]})],b);var v=n(3679),w=n(5435),y=n(4395),R=n(7519),x=n(9976);let f=class{constructor(e){this.formBuilder=e,this.searchRequest=new r.vpe,this.faSearch=x.wn1,this.searchFormStrings={label:"Search Input",placeholder:"Volltextsuche in der Webern-Datenbank \u2026",errorMessage:"Es wird ein Suchbegriff mit mindestens 3 Zeichen ben\xf6tigt!"},this.createFormGroup(),this.listenToUserInputChange()}get searchValueControl(){return this.searchForm.get("searchValueControl")}ngOnChanges(){this.setSearchValueFromInput()}createFormGroup(){this.searchForm=this.formBuilder.group({searchValueControl:["",v.kI.compose([v.kI.required,v.kI.minLength(3)])]})}listenToUserInputChange(){this.searchValueControl.valueChanges.pipe((0,w.h)(e=>e.length>=3),(0,y.b)(500),(0,R.x)()).subscribe(e=>this.onSearch(e))}setSearchValueFromInput(){this.searchValueControl.setValue(this.searchValue)}onSearch(e){this.searchRequest.emit(e)}};f.ctorParameters=()=>[{type:v.qu}],f.propDecorators={searchValue:[{type:r.IIB}],searchRequest:[{type:r.r_U}]},f=(0,s.gn)([(0,r.wA2)({selector:"awg-search-form",template:'<form [formGroup]="searchForm">\n    <div class="form-row mb-4">\n        <div class="col-12">\n            <label class="sr-only" for="awg-search-input">{{ searchFormStrings.label }}</label>\n            <div class="input-group">\n                <div class="input-group-prepend">\n                    <div class="input-group-text" id="search-icon">\n                        <fa-icon [icon]="faSearch"></fa-icon>\n                    </div>\n                </div>\n                <input\n                    title="Search"\n                    type="search"\n                    id="awg-search-input"\n                    class="form-control"\n                    formControlName="searchValueControl"\n                    aria-label="Search input"\n                    aria-describedby="search-icon"\n                    placeholder="{{ searchFormStrings.placeholder }}"\n                    required\n                />\n            </div>\n            <div *ngIf="searchValueControl.invalid && !searchValueControl.pristine" class="alert alert-danger">\n                <p *ngIf="searchValueControl.hasError(\'required\') || searchValueControl.errors.minlength"></p>\n                {{ searchFormStrings.errorMessage }}\n            </div>\n        </div>\n    </div>\n</form>\n',changeDetection:r.n4l.OnPush,styles:[""]})],f);var I=n(4213),S=n(9765),D=n(6782),k=n(6203),P=n(9939),C=n(4544);let T=class{constructor(e,t,n,s,a){this.formBuilder=e,this.router=t,this.conversionService=n,this.dataStreamerService=s,this.sideInfoService=a,this.pageChangeRequest=new r.vpe,this.rowNumberChangeRequest=new r.vpe,this.viewChangeRequest=new r.vpe,this.errorMessage=void 0,this.rowNumbers=[5,10,25,50,100,200],this.faGripHorizontal=x.BUU,this.faTable=x.B3e,this._destroy$=new S.xQ}ngOnInit(){this.getSearchResponseWithQueryData(),!this.searchParams.view||this.searchParams.view!==P.wU.table&&this.searchParams.view!==P.wU.grid||this.createFormGroup(this.searchParams.view)}createFormGroup(e){this.searchResultControlForm=this.formBuilder.group({searchResultViewControl:P.wU[e]}),this.listenToUserInputChange()}listenToUserInputChange(){this.searchResultControlForm.get("searchResultViewControl").valueChanges.subscribe(e=>{this.onViewChange(e)})}isActiveResource(e){return this._selectedResourceId===e}isGridView(){return this.searchParams.view===P.wU.grid}isNoResults(){return 0==+this.searchResponseWithQuery.data.nhits}navigateToResource(e){this._selectedResourceId=e,this.router.navigate(["/data/resource",this._selectedResourceId])}onPageChange(e){const t=+this.searchParams.nRows,n=e*t-t;this.pageChangeRequest.emit(String(n))}onRowNumberChange(e){this.rowNumberChangeRequest.emit(String(e))}onViewChange(e){this.viewChangeRequest.emit(e)}setPagination(){const e=+this.searchParams.nRows,t=+this.searchParams.startAt;this.pageSize=e,this.page=Math.floor(t/e)+1}getSearchResponseWithQueryData(){this.dataStreamerService.getSearchResponseWithQuery().pipe((0,D.R)(this._destroy$)).subscribe(e=>{this.updateSearchParams(e),this.setPagination()},e=>{this.errorMessage=e,console.error("SearchResultList# searchResultData subscription error: ",this.errorMessage)})}trackById(e){return e.obj_id}updateSearchParams(e){if(!e)return;this.searchResponseWithQuery=Object.assign({},e),this.searchResultText=this.conversionService.prepareFullTextSearchResultText(e,this.searchUrl);const t=new k.W(this.searchResponseWithQuery.query,this.searchResultText);this.sideInfoService.updateSearchInfoData(t)}ngOnDestroy(){this.sideInfoService.clearSearchInfoData(),this._destroy$.next(!0),this._destroy$.unsubscribe()}};T.ctorParameters=()=>[{type:v.qu},{type:I.F0},{type:C.re},{type:C.k$},{type:C.Iu}],T.propDecorators={searchUrl:[{type:r.IIB}],searchParams:[{type:r.IIB}],pageChangeRequest:[{type:r.r_U}],rowNumberChangeRequest:[{type:r.r_U}],viewChangeRequest:[{type:r.r_U}]},T=(0,s.gn)([(0,r.wA2)({selector:"awg-search-result-list",template:'\x3c!-- content: search results --\x3e\n<div class="awg-search-results" *ngIf="searchResponseWithQuery?.data">\n    \x3c!-- header --\x3e\n    <div class="row d-flex justify-content-between mb-4 awg-search-results-header">\n        <div class="col-6 mr-auto awg-search-results-header-icons">\n            <div class="btn-group">\n                <form [formGroup]="searchResultControlForm">\n                    <div\n                        class="btn-group btn-group-toggle"\n                        ngbRadioGroup\n                        name="searchResultView"\n                        formControlName="searchResultViewControl"\n                    >\n                        <label ngbButtonLabel class="btn-outline-info" ngbTooltip="Table view">\n                            <input ngbButton type="radio" value="table" [disabled]="isNoResults()" />\n                            <fa-icon [icon]="faTable"></fa-icon>\n                        </label>\n                        <label ngbButtonLabel class="btn-outline-info" ngbTooltip="Grid view">\n                            <input ngbButton type="radio" value="grid" [disabled]="isNoResults()" />\n                            <fa-icon [icon]="faGripHorizontal"></fa-icon>\n                        </label>\n                    </div>\n                </form>\n                <div class="btn-group">\n                    <button type="button" class="btn btn-outline-info" disabled aria-disabled="true">\n                        <span class="d-none d-lg-inline">Hits per page: </span>{{ searchParams?.nRows }}\n                    </button>\n                    <div\n                        class="btn-group"\n                        ngbDropdown\n                        role="group"\n                        aria-label="Button group with nested dropdown for row number"\n                    >\n                        <button\n                            class="btn btn-info dropdown-toggle-split"\n                            ngbDropdownToggle\n                            [disabled]="isNoResults()"\n                        ></button>\n                        <div class="dropdown-menu" ngbDropdownMenu>\n                            <button\n                                class="dropdown-item"\n                                *ngFor="let rowNumber of rowNumbers"\n                                (click)="onRowNumberChange(rowNumber)"\n                            >\n                                {{ rowNumber }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="col-6 my-auto text-center awg-search-results-header-text">\n            {{ searchResultText }}\n        </div>\n    </div>\n\n    <ng-container *ngIf="searchResponseWithQuery?.data?.subjects && !isNoResults()">\n        \x3c!-- top pagination --\x3e\n        <ngb-pagination\n            class="d-flex justify-content-center"\n            [(page)]="page"\n            [pageSize]="pageSize"\n            [collectionSize]="+searchResponseWithQuery?.data?.nhits"\n            [maxSize]="4"\n            [boundaryLinks]="true"\n            (pageChange)="onPageChange($event)"\n        >\n        </ngb-pagination>\n\n        \x3c!-- table with searchResults --\x3e\n        <div *ngIf="!isGridView()" class="table-responsive">\n            <table class="table table-sm awg-search-result-table">\n                <thead>\n                    <tr class="d-flex">\n                        <th class="col-6 col-sm-4 col-md-5 col-lg-4 col-xl-3">Typ</th>\n                        <th class="col-6 col-sm-8 col-md-7 col-lg-8 col-xl-9">Ressource</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \x3c!-- show searchResultDetail by clicking on single entry --\x3e\n                    <tr\n                        class="d-flex"\n                        *ngFor="let subject of searchResponseWithQuery?.data?.subjects; trackBy: trackById"\n                        (click)="navigateToResource(subject?.obj_id)"\n                        [class.active]="isActiveResource(subject?.obj_id)"\n                    >\n                        <td class="col-6 col-sm-4 col-md-5 col-lg-4 col-xl-3">\n                            <span class="badge">\n                                <img [attr.src]="subject?.iconsrc" alt="iconsrc" />\n                                <small>&nbsp;{{ subject?.iconlabel }}</small>\n                            </span>\n                        </td>\n                        <td class="col-6 col-sm-8 col-md-7 col-lg-8 col-xl-9">\n                            <span [compile-html]="(subject?.value)[0]" [compile-html-ref]="this"></span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        \x3c!-- grid with searchResults --\x3e\n        <div *ngIf="isGridView()" class="card-columns">\n            <div class="card" *ngFor="let subject of searchResponseWithQuery?.data?.subjects; trackBy: trackById">\n                <div class="card-header">\n                    <img [attr.src]="subject?.iconsrc" alt="iconsrc" />\n                    &nbsp;{{ subject?.iconlabel }}\n                </div>\n                <div class="card-body">\n                    <h5 class="card-title">\n                        <span [compile-html]="(subject?.value)[0]" [compile-html-ref]="this"></span>\n                    </h5>\n                    <button type="button" class="btn btn-outline-info" (click)="navigateToResource(subject?.obj_id)">\n                        Mehr ...\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        \x3c!-- bottom pagination --\x3e\n        <ngb-pagination\n            class="d-flex justify-content-center"\n            [(page)]="page"\n            [pageSize]="pageSize"\n            [collectionSize]="+searchResponseWithQuery?.data?.nhits"\n            [maxSize]="4"\n            [boundaryLinks]="true"\n            (pageChange)="onPageChange($event)"\n        >\n        </ngb-pagination>\n    </ng-container>\n</div>\n',changeDetection:r.n4l.Default,styles:[".awg-search-results .awg-search-result-table tbody tr {\n    cursor: pointer;\n}\n.awg-search-results .awg-search-result-table tbody tr:hover {\n    background-color: #e7e7e7;\n}\n.awg-search-results .awg-search-result-table tbody tr.active td {\n    background-color: #d7d7d7;\n}\n"]})],T);let j=class{constructor(e){this.router=e,this.searchTitle="Suche",this.searchId="search"}ngOnInit(){this.routeToSidenav()}routeToSidenav(){this.router.navigate([{outlets:{side:"searchInfo"}}],{preserveFragment:!0,queryParamsHandling:"preserve"})}};j.ctorParameters=()=>[{type:I.F0}],j=(0,s.gn)([(0,r.wA2)({selector:"awg-data",template:'\x3c!-- content: search --\x3e\n\n\x3c!-- heading --\x3e\n<awg-heading [title]="searchTitle" [id]="searchId"></awg-heading>\n\n\x3c!-- help-block --\x3e\n<div class="help-block">BETA: Suche momentan noch mit eingeschr\xe4nkter Funktionalit\xe4t</div>\n\n\x3c!-- data (search) routes --\x3e\n<router-outlet></router-outlet>\n',styles:[""]})],j);var A=n(3190),q=n(1841),_=n(7463);let O=class extends C.sM{constructor(e){super(e),this.projectId="6",this.resTypeId="126",this.bibShortTitlePropertyId="614",this.resourcesRoute="resources/",this.searchRoute="search/",this.serviceName="BibliographyService"}getBibliographyList(){const e=this.searchRoute,t=(new q.LE).set("searchtype","extended").set("property_id",this.bibShortTitlePropertyId).set("compop","EXISTS").set("filter_by_project",this.projectId).set("filter_by_restype",this.resTypeId);return this.getApiResponse(_.vX,e,t)}getBibliographyItemDetail(e){const t=this.resourcesRoute+e,n=new q.LE;return this.getApiResponse(_.wB,t,n)}};O.ctorParameters=()=>[{type:q.eN}],O=(0,s.gn)([(0,r.GSi)({providedIn:"root"})],O);var F=n(5758),N=n(5242),B=n(8002);let G=class extends C.sM{constructor(e,t){super(e),this.conversionService=t,this.projectId="6",this.resourceSuffix="_-_local",this.routes={resources:"resources/",search:"search/",geonames:"geonames/",hlists:"hlists/",selections:"selections/"},this.serviceName="DataApiService"}getFulltextSearchData(e){if(!e||!e.query)return;const t={query:e.query,nRows:e.nRows||"-1",startAt:e.startAt||"0",view:e.view||P.wU.table},n=this.routes.search+t.query,s=(new q.LE).set("searchtype","fulltext").set("filter_by_project",this.projectId).set("show_nrows",t.nRows).set("start_at",t.startAt);return this.getApiResponse(_.vX,n,s).pipe((0,N.d)(new _.vX),(0,B.U)(e=>this.conversionService.convertFullTextSearchResults(e)))}getResourceData(e){if(!e)return;const t=this._getResourceFullResponseData(e),n=this._getResourceContextData(e);return(0,F.D)([t,n]).pipe((0,N.d)([new _.wB,new _.QX]),(0,B.U)(t=>this._prepareResourceData(t,e)))}_prepareResourceData(e,t){if(0===Object.keys(e[0]).length&&e[0].constructor===Object)return new P.Li(new _.wB,void 0);const n=this.conversionService.convertResourceData(e,t);return new P.Li(e[0],n)}_getResourceContextData(e){return this._getResourceDataResponseFromApi(_.QX,e)}_getResourceFullResponseData(e){return this._getResourceDataResponseFromApi(_.wB,e)}_getGeoData(e){return this._getResourceDataResponseFromApi(_.gg,e)}_getHlistData(e){return this._getResourceDataResponseFromApi(_.xU,e)}_getSelectionsData(e){return this._getResourceDataResponseFromApi(_.nh,e)}_getResourceDataResponseFromApi(e,t){let n,s=new q.LE;switch(e){case _.gg:n=this.routes.geonames+t,s=s.set("reqtype","node");break;case _.xU:n=this.routes.hlists+t;break;case _.QX:n=this.routes.resources+t+this.resourceSuffix,s=s.set("reqtype","context");break;case _.wB:n=this.routes.resources+t+this.resourceSuffix;break;case _.nh:n=this.routes.selections+t}return this.getApiResponse(e,n,s)}_getNodeIdFromAttributes(e){return e.split("=")[1].toString()}};G.ctorParameters=()=>[{type:q.eN},{type:C.re}],G=(0,s.gn)([(0,r.GSi)({providedIn:"root"})],G);let U=class{constructor(e,t,n,s,r,a){this.route=e,this.router=t,this.dataApiService=n,this.dataStreamerService=s,this.gndService=r,this.loadingService=a,this.errorMessage=void 0,this.tabTitles={html:"Detail",raw:"JSON (raw)",converted:"JSON (converted)"},this._destroy$=new S.xQ}get httpGetUrl(){return this.dataApiService.httpGetUrl}get isLoading$(){return this.loadingService.getLoadingStatus()}ngOnInit(){this.routeToSidenav(),this.getResourceData()}getResourceData(){this.route.paramMap.pipe((0,A.w)(e=>{const t=e.get("id");return this.updateResourceId(t),this.dataApiService.getResourceData(t)}),(0,D.R)(this._destroy$)).subscribe(e=>{this.resourceData=e},e=>this.errorMessage=e)}updateResourceId(e){this.resourceId=e,this.dataStreamerService.updateResourceId(e)}navigateToResource(e){const t=e||(this.oldId?this.oldId:this.resourceId);this.oldId=this.resourceId,this.router.navigate(["/data/resource",+t])}exposeGnd(e){e&&this.gndService.exposeGnd(e)}routeToSidenav(){this.router.navigate([{outlets:{side:"resourceInfo"}}],{preserveFragment:!0,queryParamsHandling:"preserve"})}ngOnDestroy(){this._destroy$.next(!0),this._destroy$.unsubscribe()}};U.ctorParameters=()=>[{type:I.gz},{type:I.F0},{type:G},{type:C.k$},{type:C.dW},{type:C.bz}],U=(0,s.gn)([(0,r.wA2)({selector:"awg-resource-detail",template:'\x3c!-- resource detail box --\x3e\n\n\x3c!-- loading spinner --\x3e\n<div *ngIf="isLoading$ | async; else notLoading">\n    <awg-twelve-tone-spinner></awg-twelve-tone-spinner>\n</div>\n\n<ng-template #notLoading>\n    \x3c!-- error message --\x3e\n    <div class="errorMessage" *ngIf="errorMessage">\n        <p>Die Anfrage "{{ errorMessage?.route }}" ist fehlgeschlagen.</p>\n        <p>Fehlermeldung: "{{ errorMessage?.statusText || errorMessage }}".</p>\n        <p>M\xf6glicherweise gab es ein Problem mit der Internetverbindung oder dem verwendeten Suchbegriff.</p>\n    </div>\n\n    \x3c!-- async data --\x3e\n    <div class="awg-resource-detail-tabs" *ngIf="resourceData">\n        \x3c!-- resourceDetailData header --\x3e\n        <awg-resource-detail-header\n            *ngIf="resourceData.detail.header"\n            [header]="resourceData.detail.header"\n            [resourceUrl]="httpGetUrl"\n            (resourceRequest)="navigateToResource($event)"\n        ></awg-resource-detail-header>\n\n        \x3c!-- resourceDetailData body --\x3e\n        <nav ngbNav #resourceDetailNav="ngbNav" class="nav-tabs">\n            <ng-container ngbNavItem>\n                <a ngbNavLink class="awg-resource-detail-long-tab">{{ tabTitles?.html }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- html visualisation --\x3e\n                    <awg-resource-detail-html\n                        [resourceDetailData]="resourceData.detail"\n                        (gndRequest)="exposeGnd($event)"\n                        (resourceRequest)="navigateToResource($event)"\n                    >\n                    </awg-resource-detail-html>\n                </ng-template>\n            </ng-container>\n            <ng-container ngbNavItem>\n                <a ngbNavLink class="ml-auto">{{ tabTitles?.converted }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- converted json visualisation --\x3e\n                    <awg-resource-detail-json-converted [resourceJsonConvertedData]="resourceData.jsonConverted">\n                    </awg-resource-detail-json-converted>\n                </ng-template>\n            </ng-container>\n            <ng-container ngbNavItem>\n                <a ngbNavLink>{{ tabTitles?.raw }}</a>\n                <ng-template ngbNavContent>\n                    \x3c!-- raw json visualisation --\x3e\n                    <awg-resource-detail-json-raw [resourceJsonRawData]="resourceData.jsonRaw">\n                    </awg-resource-detail-json-raw>\n                </ng-template>\n            </ng-container>\n        </nav>\n        <div [ngbNavOutlet]="resourceDetailNav"></div>\n    </div>\n\n    \x3c!--\n    TODO: remove\n    <ul class="nav nav-tabs nav-justified" role="tablist">\n        <li class="active awg-resource-detail-long-tab"><a data-toggle="tab" href="#html">{{ tabTitles?.html }}</a></li>\n        <li class="dropdown awg-resource-detail-short-tab">\n            <a href="#" data-toggle="dropdown" class="dropdown-toggle">\n                {{ \'{\' }} JSON {{ \'}\' }} <b class="caret"></b>\n            </a>\n            <ul class="dropdown-menu dropdown-menu-right">\n                <li><a data-toggle="tab" href="#converted">{{ tabTitles?.converted }}</a></li>\n                <li><a data-toggle="tab" href="#raw">{{ tabTitles?.raw }}</a></li>\n            </ul>\n        </li>\n    </ul>\n    --\x3e\n</ng-template>\n',changeDetection:r.n4l.Default,styles:["/************************************************\n*\n*               CREDITS\n*\n* This code is inspired, adapted or taken from:\n*\n* ARACHNE \u2013 Objektdatenbank des Deutschen Arch\xe4ologischen Instituts (DAI)\n* https://arachne.dainst.org/entity/1121229**]\n* 20.11.2017\n*\n*\n*\n************************************************/\n\n/* for resource-header see 'resource-detail-html-header.component.css' */\n\n/* for resource-html-props see 'props.component.css' */\n\n/* tabs */\n\n/* adjust tab size on larger screens */\n\n@media screen and (min-width: 768px) {\n    /* set auto width for long tab */\n    .awg-resource-detail-long-tab {\n        width: auto !important;\n    }\n    /* avoid line wrap in link text */\n    .awg-resource-detail-short-tab > a {\n        white-space: nowrap;\n    }\n}\n\n::ng-deep .tab-content .tab-pane.active {\n    margin: 2rem 0;\n}\n"]})],U);var V=n(849);let L=class{constructor(e,t){this.sideInfoService=e,this.route=t}ngOnInit(){this.setButtons(),this.updateSearchInfoTitleFromPath()}setButtons(){this.searchRouterLinkButtons=[new V.v("/data/search","fulltext","Volltext-Suche",!1),new V.v("/data/search","timeline","Timeline",!0),new V.v("/data/search","bibliography","Bibliographie",!0)]}updateSearchInfoTitleFromPath(){const e=this.route.snapshot.children[0].url[0].path,t=this.searchRouterLinkButtons.filter(t=>t.link===e);1===t.length&&this.sideInfoService.updateSearchInfoTitle(t[0].label)}onButtonSelect(e){const t=e instanceof V.v;e&&t&&e.label&&(this.sideInfoService.clearSearchInfoData(),this.sideInfoService.updateSearchInfoTitle(e.label))}};L.ctorParameters=()=>[{type:C.Iu},{type:I.gz}],L=(0,s.gn)([(0,r.wA2)({selector:"awg-search-overview",template:'<awg-router-link-button-group\n    *ngIf="searchRouterLinkButtons"\n    [routerLinkButtons]="searchRouterLinkButtons"\n    [queryParamsHandling]="\'preserve\'"\n    (selectButtonRequest)="onButtonSelect($event)"\n>\n</awg-router-link-button-group>\n\n<router-outlet></router-outlet>\n',styles:[""]})],L);let M=class{constructor(e,t,n,s,r,a){this.route=e,this.router=t,this.conversionService=n,this.dataApiService=s,this.dataStreamerService=r,this.loadingService=a,this.destroy$=new S.xQ,this.searchParams={query:"",nRows:"25",startAt:"0",view:P.wU.table},this.errorMessage=void 0,this.viewChanged=!1}get httpGetUrl(){return this.dataApiService.httpGetUrl}get isLoading$(){return this.loadingService.getLoadingStatus()}ngOnInit(){this.getFulltextSearchData()}getFulltextSearchData(){this.router.events.pipe((0,D.R)(this.destroy$)).subscribe(e=>{if(e instanceof I.m2){const e=this.route.snapshot.queryParamMap;if(e!==this.currentQueryParams)if(this.currentQueryParams=e,e.keys.length<4)this.updateSearchParamsFromRoute(e,!0);else if(this.updateSearchParamsFromRoute(e,!1),this.searchParams.query&&!this.viewChanged)return this.dataApiService.getFulltextSearchData(this.searchParams).subscribe(e=>{const t=new P.PY(e,this.searchParams.query);this.dataStreamerService.updateSearchResponseWithQuery(t)},e=>{this.errorMessage=e})}},e=>{this.errorMessage=e})}onPageChange(e){e!==this.searchParams.startAt&&(this.viewChanged=!1,this.searchParams={query:this.searchParams.query,nRows:this.searchParams.nRows,startAt:e,view:this.searchParams.view},this.routeToSelf(this.searchParams))}onRowNumberChange(e){e!==this.searchParams.nRows&&(this.viewChanged=!1,this.searchParams={query:this.searchParams.query,nRows:e,startAt:"0",view:this.searchParams.view},this.routeToSelf(this.searchParams))}onViewChange(e){e!==this.searchParams.view&&(this.viewChanged=!0,this.searchParams={query:this.searchParams.query,nRows:this.searchParams.nRows,startAt:this.searchParams.startAt,view:P.wU[e]},this.routeToSelf(this.searchParams))}onSearch(e){e!==this.searchParams.query&&(this.viewChanged=!1,this.searchParams={query:e,nRows:this.searchParams.nRows,startAt:this.searchParams.startAt,view:this.searchParams.view},this.routeToSelf(this.searchParams))}routeToSelf(e){this.router.navigate([],{relativeTo:this.route,queryParams:{query:e.query,nrows:e.nRows,startAt:e.startAt,view:e.view},queryParamsHandling:"merge"})}updateSearchParamsFromRoute(e,t){e&&(this.searchParams={query:e.get("query")||this.searchParams.query,nRows:e.get("nrows")||this.searchParams.nRows,startAt:e.get("startAt")||this.searchParams.startAt,view:P.wU[e.get("view")]||this.searchParams.view},t&&this.routeToSelf(this.searchParams))}ngOnDestroy(){this.destroy$.next(!0),this.destroy$.unsubscribe()}};M.ctorParameters=()=>[{type:I.gz},{type:I.F0},{type:C.re},{type:G},{type:C.k$},{type:C.bz}],M=(0,s.gn)([(0,r.wA2)({selector:"awg-search-panel",template:'\x3c!-- content: search panel --\x3e\n\n<awg-search-form [searchValue]="searchParams?.query" (searchRequest)="onSearch($event)"> </awg-search-form>\n\n\x3c!-- loading spinner --\x3e\n<div *ngIf="isLoading$ | async; else notLoading">\n    <awg-twelve-tone-spinner></awg-twelve-tone-spinner>\n</div>\n\n<ng-template #notLoading>\n    <div class="errorMessage" *ngIf="errorMessage">\n        <p>Die Anfrage "{{ errorMessage?.route }}" ist fehlgeschlagen.</p>\n        <p>Fehlermeldung: "{{ errorMessage?.statusText || errorMessage }}".</p>\n        <p>M\xf6glicherweise gab es ein Problem mit der Internetverbindung oder dem verwendeten Suchbegriff.</p>\n    </div>\n\n    <awg-search-result-list\n        *ngIf="searchParams?.query"\n        [searchParams]="searchParams"\n        [searchUrl]="httpGetUrl"\n        (pageChangeRequest)="onPageChange($event)"\n        (rowNumberChangeRequest)="onRowNumberChange($event)"\n        (viewChangeRequest)="onViewChange($event)"\n    >\n    </awg-search-result-list>\n</ng-template>\n',styles:[""]})],M);const $=[{path:"",component:j,children:[{path:"search",component:L,children:[{path:"fulltext",component:M,data:{title:"AWG Online Edition \u2013 Search"}},{path:"detail/:id",redirectTo:"resource/:id"},{path:"",pathMatch:"full",redirectTo:"fulltext"}]}]},{path:"resource/:id",component:U,data:{title:"AWG Online Edition \u2013 Resource Detail"}}],E=[j,L,M,U];let z=class{};z=(0,s.gn)([(0,r.LVF)({imports:[I.Bz.forChild($)],exports:[I.Bz]})],z);let Q=class{};Q=(0,s.gn)([(0,r.LVF)({imports:[a.m,b,z],declarations:[E,f,T]})],Q)}}]);